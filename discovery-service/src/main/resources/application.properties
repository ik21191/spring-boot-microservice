spring.application.name=discovery-service
server.port=8761

#Below property is used to register a service with Eureka server and by default it is true, that is why we are explicitly
#setting it to false so that this (Eureka Server) will not able to register itself with Eureka server. 
#migration change
#eureka.client.registerWithEureka=false

#This property indicates that Eureka Server is supported to fetch instance details of microservice to make 
#intra-communication between microservices happen. By default it is true.
#We have added this property explicitly to explain the details of how it works. We are fetching details of all microservices
#using code in the class DiscoveryServiceApplication to demonstrate how to trigger an event when a service is down.
#migration change
#eureka.client.fetchRegistry=true


eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

eureka.instance.hostname=localhost
#Migration change
#eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
eureka.client.service-url.default-zone=http://${eureka.instance.hostname}:${server.port}/eureka/